// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Hero {
  id         Int    @id @default(autoincrement())
  title      String @db.Text
  subtitle   String @db.Text
  buttonText String
  image      String @db.Text
}

model Service {
  id          Int          @id @default(autoincrement())
  title       String       
  description String       @db.Text
  icon        String
  subServices SubService[]
  projects    Project[] // Tambahkan baris ini untuk menghubungkan Service dengan Project
}

model PageContent {
  id        Int     @id @default(autoincrement())
  pageName  String  @unique 
  title     String  @db.Text
  subtitle  String  @db.Text
}

model SubService {
  id          Int     @id @default(autoincrement())
  title       String
  description String  @db.Text
  image       String? @db.Text
  serviceId   Int
  service     Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
}

// Hapus model Category.

model Project {
  id            Int      @id @default(autoincrement())
  title         String
  description   String   @db.Text
  image         String   @db.Text
  client        String?
  completedDate String?
  
  // Ganti `categoryId` dengan `serviceId` untuk mereferensikan Service
  serviceId     Int
  service       Service  @relation(fields: [serviceId], references: [id])
}

model Statistic {
  id     Int    @id @default(autoincrement())
  number String
  label  String
  icon   String
}

model Partner {
  id      Int    @id @default(autoincrement())
  logoUrl String @db.Text
}

model About {
  id      Int      @id @default(autoincrement())
  title   String
  content String   @db.Text
  mission String   @db.Text
  vision  String   @db.Text
  values  String[]
}

model VisitStats {
  id              Int      @id @default(autoincrement())
  totalVisits     Int      @default(0)
  uniqueVisitors  Int      @default(0)
}

model UniqueVisitor {
  id          Int      @id @default(autoincrement())
  ip          String   @unique
  lastVisit   DateTime @default(now())
}

model Contact {
  id       Int    @id @default(autoincrement())
  title    String
  subtitle String @db.Text
  address  String
  phone    String
  email    String
  hours    String
}

model Admin {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  role      String   @default("EMPLOYEE")
  createdAt DateTime @default(now())
}

model TimelineEvent {
  id          Int      @id @default(autoincrement())
  year        String
  title       String
  description String   @db.Text
  createdAt   DateTime @default(now())
}